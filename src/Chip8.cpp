
#include <cstring>

#include "Chip8.hpp"

Chip8::Chip8(const char* path, unsigned int freq, Uint32 bgColor, Uint32 fgColor) {
    this.freq = freq;
    this.bgColor = bgColor;
    this.fgColor = fgColor;
    
    // zero out main memory, stack, general purpose registers, and keypress state
    memset( this.memory, 0, sizeof(this.memory) );
    memset( this.stack,  0, sizeof(this.stack) );
    memset( this.V,      0, sizeof(this.V) );
    memset( this.keys,   0, sizeof(this.keys) );
    
    // initialize other registers
    this.I  = 0;
    this.PC = 0x200; // program always starts at address 0x200
    this.SP = 0;
    
    // initialize timers
    this.DT = 0;
    this.ST = 0;
    
    // set up arrays of fonts
	Uint8 chip8_font[0x50] = { 0xF0, 0x90, 0x90, 0x90, 0xF0,   // 0
	                           0x20, 0x60, 0x20, 0x20, 0x70,   // 1
	                           0xF0, 0x10, 0xF0, 0x80, 0xF0,   // 2
	                           0xF0, 0x10, 0xF0, 0x10, 0xF0,   // 3
	                           0x90, 0x90, 0xF0, 0x10, 0x10,   // 4
	                           0xF0, 0x80, 0xF0, 0x10, 0xF0,   // 5
	                           0xF0, 0x80, 0xF0, 0x90, 0xF0,   // 6
	                           0xF0, 0x10, 0x20, 0x40, 0x40,   // 7
	                           0xF0, 0x90, 0xF0, 0x90, 0xF0,   // 8
	                           0xF0, 0x90, 0xF0, 0x10, 0xF0,   // 9
	                           0xF0, 0x90, 0xF0, 0x90, 0x90,   // A
	                           0xE0, 0x90, 0xE0, 0x90, 0xE0,   // B
	                           0xF0, 0x80, 0x80, 0x80, 0xF0,   // C
	                           0xE0, 0x90, 0x90, 0x90, 0xE0,   // D
	                           0xF0, 0x80, 0xF0, 0x80, 0xF0,   // E
	                           0xF0, 0x80, 0xF0, 0x80, 0x80 }; // F

    Uint8 schip_font[0x100] = { 0x38, 0x44, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x44, 0x38,   // 0
                                0x10, 0x30, 0x50, 0x90, 0x10, 0x10, 0x10, 0x10, 0x10, 0xFE,   // 1
                                0x38, 0x44, 0x82, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0xFE,   // 2
                                0xFE, 0x02, 0x04, 0x08, 0x18, 0x04, 0x02, 0x02, 0x84, 0x78,   // 3
                                0x04, 0x0C, 0x14, 0x24, 0x44, 0x84, 0xFE, 0x04, 0x04, 0x04,   // 4
                                0xFE, 0x80, 0x80, 0x80, 0xF8, 0x04, 0x02, 0x02, 0x84, 0x78,   // 5
                                0x3C, 0x40, 0x80, 0x80, 0xB8, 0xC4, 0x82, 0x82, 0x44, 0x38,   // 6
                                0xFE, 0x02, 0x04, 0x04, 0x08, 0x08, 0x10, 0x10, 0x10, 0x10,   // 7
                                0x38, 0x44, 0x82, 0x44, 0x38, 0x44, 0x82, 0x82, 0x44, 0x38,   // 8
                                0x38, 0x44, 0x82, 0x82, 0x46, 0x3A, 0x02, 0x02, 0x04, 0x78,   // 9
                                0x10, 0x28, 0x28, 0x28, 0x44, 0x7C, 0x44, 0x82, 0x82, 0x82,   // A
                                0xF8, 0x84, 0x82, 0x84, 0xF8, 0x84, 0x82, 0x82, 0x84, 0xF8,   // B
                                0x3C, 0x42, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x42, 0x3C,   // C
                                0xF8, 0x84, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x84, 0xF8,   // D
                                0xFE, 0x80, 0x80, 0x80, 0xF8, 0x80, 0x80, 0x80, 0x80, 0xFE,   // E
                                0xFE, 0x80, 0x80, 0x80, 0xF8, 0x80, 0x80, 0x80, 0x80, 0x80 }; // F
                                
    // copy fonts to memory
    memcpy(   this.memory,         chip8_font, sizeof(chip8_font) ); // chip8 font goes at 0x000 through 0x04F
    memcpy( &(this.memory[0x100]), schip_font, sizeof(schip_font) ); // schip font goes at 0x100 through 0x19F
    // TODO initialize video subsystem, random number generator, etc.
}
    
bool Chip8::isKeyPressed(Uint8 keyToCheck) {
    // if keyToCheck is greater than 0xF
    //   then return false (not pressed)
    //   else return true if the key is not 0 (ie. is pressed), false if it is zero
    return keyToCheck > 0xF ? false : this.keys[keyToCheck] != 0;
}
    
void Chip8::setKeyAsPressed(Uint8 keyToSet) {
    if (keyToSet <= 0x10) {
        this.keys[keyToSet] = 1;
    }
}

void Chip8::clearKeyPresses() {
    memset(this.keys, 0, sizeof(this.keys));
}